apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: "eclipse"

group 'SteepGraph System Pvt Ltd.'
version '2.0'

ext {
	buildName = "SGS3DXTAS"
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
        }
    }
}

repositories {
      jcenter()
      maven {
	    url 'https://oss.sonatype.org/content/repositories/snapshots/'
	  }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'log4j-over-slf4j') {
            details.useTarget "org.apache.logging.log4j:log4j-core:2.22.1"
        }
	}
}

dependencies {
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.141.59'
	compile group: 'org.testng', name: 'testng', version: '7.4.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.22.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.22.1'
 	compile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0-M1'
	compile group: 'com.opencsv', name: 'opencsv', version: '4.6'
	compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.4'
	compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
	compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
	compile group: 'com.fathzer', name: 'javaluator', version: '3.0.3'
	compile group: 'com.sikulix', name: 'sikulixapi', version: '2.0.4'
	compile group: 'com.github.2gis.winium', name: 'winium-webdriver', version: '0.1.0-1'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.13'
	compile group: 'org.simpleframework', name: 'simple-xml', version: '2.7.1'
	compile group: 'org.seleniumhq.selenium', name: 'htmlunit-driver', version: '2.36.0'
	compile group: 'com.codeborne', name: 'phantomjsdriver', version: '1.4.4'
	compile group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'
	compile group: 'org.json', name: 'json', version: '20190722'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	compile group: 'com.browserup', name: 'browserup-proxy-core', version: '2.1.1'
	compile group: 'uk.co.caprica', name: 'vlcj', version: '3.12.1'
	compile group: 'org.uncommons', name: 'reportng', version: '1.1.4'
    compile group: 'org.xmlunit', name: 'xmlunit-legacy', version: '2.3.0'
    compile group: 'org.apache.poi', name: 'poi', version: '5.2.3'  
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.1.0'    
    compile group: 'org.apache.tika', name: 'tika-core', version: '2.9.0'
    compile group: 'org.apache.tika', name: 'tika-parsers-standard-package', version: '2.9.0'
    
	compile files("src/main/resources/jar/ojdbc14-11.2.0.4.jar")
	compile files("src/main/resources/jar/jacob.jar")
	compile files("src/main/resources/jar/AutoItX4Java.jar")
	compile files("src/main/resources/jar/ATUTestRecorder_2.1.jar")

	compile files("src/main/resources/jar/JavaLicensing.jar")	
	compile files("src/main/resources/jar/enovia/eMatrixServletRMI.jar")
	compile files("src/main/resources/jar/enovia/enoviaKernel.jar")
	compile files("src/main/resources/jar/enovia/framework.jar")

	sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

task collectJars(type: Copy){
    into "$buildDir/dependencies"
    from configurations.testRuntime
}

task collectDll(type: Copy){
    into "$buildDir/dependencies"
    from "src/main/resources/jar"
}

build.dependsOn(collectDll)
build.dependsOn(collectJars)

jar {
  manifest { 
    attributes ( 
     "Main-Class": "com.steepgraph.ta.framework.Launcher",
     "Class-Path": configurations.runtime.files.collect { "../dependencies/$it.name" }.join(' ')
     )
  }  
 
  exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
  
  exclude('resources/*')
  exclude('jar/*')
  exclude('autoit/*')
  exclude('TestAutomationFramework.properties')  
  exclude('LoginData.csv')
  exclude('TestData.csv')
  exclude('log4j.properties')
  exclude('TestCaseSample.xml')
  exclude('TestCaseSample2.xml')
  exclude('Login.xml')
  exclude('Master.xml') 
  exclude('Logout.xml') 
  exclude('testng.xml')   
  exclude('proguard.txt')
  exclude('objectregister.properties')
  exclude('TestAutomationDB.sql')   
  exclude('SOAP Request.xml')
  exclude('ImportCertificateToJava.txt')
  
  baseName buildName + '-raw' 
}


buildscript {
    repositories {
        mavenCentral()
    }
 
    dependencies {
        //classpath 'net.sf.proguard:proguard-gradle:5.2.1'
        classpath 'net.sf.proguard:proguard-gradle:6.3.0beta1'
    }
}

task proguard(type: proguard.gradle.ProGuardTask) {
    configuration 'src/main/resources/proguard.txt'
 
    injars "build/libs/$buildName-raw-${version}.jar"
    outjars "build/libs/$buildName-${version}.jar"
 
    libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    libraryjars files(configurations.compile.collect())
}

build.dependsOn(proguard)
